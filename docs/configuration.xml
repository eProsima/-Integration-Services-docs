<body>
<!-- Configuration Format Start -->
    <is>
        <is_types/>
        <profiles/>
        <bridge/>
        <connector/>
    </is>
<!-- Configuration Format End -->

<!-- IS Types Start -->
    <is_types>
        <!-- Fast-RTPS XML Types -->
        <types>
            <type>
                <struct name="HelloWorld">
                    <unsignedlong name="index"/>
                    <string name="message"/>
                </struct>
            </type>
        </types>

        <!-- IS Types Libraries -->
        <type name="ShapeType">
            <library>libshape.so</library>
        </type>
        <types_library>libdefault.so</types_library>
    </is_types>
<!-- IS Types End -->

<!-- Profiles Start -->
    <profiles>
        <participant profile_name="domain0">
            <rtps>
                <builtin>
                    <domainId>0</domainId>
                </builtin>
            </rtps>
        </participant>

        <participant profile_name="domain5">
            <rtps>
                <builtin>
                    <domainId>5</domainId>
                </builtin>
            </rtps>
        </participant>

        <subscriber profile_name="is_subscriber">
            <topic>
                <name>TextPubSubTopic</name>
                <dataType>Text</dataType>
            </topic>
            <historyMemoryPolicy>DYNAMIC</historyMemoryPolicy>
        </subscriber>

        <publisher profile_name="is_publisher">
            <topic>
                <name>TextPubSubTopic</name>
                <dataType>Text</dataType>
            </topic>
            <historyMemoryPolicy>DYNAMIC</historyMemoryPolicy>
        </publisher>
    </profiles>
<!-- Profiles End -->

<!-- Basic Connector Start -->
    <connector name="dump_to_file">
        <reader participant_profile="rtps" subscriber_profile="fastrtps_subscriber"/>
        <writer bridge_name="file" writer_name="file_writer"/>
        <transformation file="libfile.so" function="addTimestamp"/>
    </connector>
<!-- Basic Connector End -->


<!-- RTPS Connector Start -->
    <is>
        <profiles>
            <participant profile_name="RTPS-Publisher">
                <!-- RTPS participant attributes -->
            </participant>

            <participant profile_name="RTPS-Subscriber">
                <!-- RTPS participant attributes -->
            </participant>

            <subscriber profile_name="Subscriber">
                <!-- RTPS subscriber attributes -->
            </subscriber>

            <publisher profile_name="Publisher">
                <!-- RTPS publisher attributes -->
            </publisher>
        </profiles>

        <connector name="connector">
            <reader participant_profile="RTPS-Subscriber" subscriber_profile="Subscriber"/>
            <writer participant_profile="RTPS-Publisher" publisher_profile="Publisher"/>
            <transformation file="/path/to/transform/libuserlib.so" function="transform"/>
        </connector>
    </is>
<!-- RTPS Connector End -->

<!-- RTPS To other connector Start -->
    <is>
        <profiles>
            <participant profile_name="RTPS">
                <!-- RTPS participant attributes -->
            </participant>

            <subscriber profile_name="Subscriber">
                <!-- RTPS subscriber attributes -->
            </subscriber>
        </profiles>

        <bridge name="Other protocol">
            <library>/path/to/bridge/library/libprotocol.so</library>
            <!-- Other protocol properties -->

            <writer name="Other">
                <!-- Other protocol writer properties -->
            </writer>
        </bridge>

        <connector name="connector">
            <reader participant_profile="RTPS" subscriber_profile="Subscriber"/>
            <writer bridge_name="Other protocol" writer_name="Other"/>
            <transformation file="/path/to/transform/libuserlib.so" function="transform"/>
        </connector>
    </is>
<!-- RTPS To other connector End -->

<!-- Other connector to RTPS Start -->
    <is>
        <profiles>
            <participant profile_name="RTPS">
                <!-- RTPS participant attributes -->
            </participant>

            <publisher profile_name="Publisher">
                <!-- RTPS publisher attributes -->
            </publisher>
        </profiles>

        <bridge name="Other protocol">
            <library>/path/to/bridge/library/libprotocol.so</library>
            <!-- Other protocol properties -->

            <reader name="Other">
                <!-- Other protocol reader properties -->
            </reader>
        </bridge>

        <connector name="connector">
            <reader bridge_name="Other protocol" reader_name="Other"/>
            <writer participant_profile="RTPS" publisher_profile="Publisher"/>
            <transformation file="/path/to/transform/libuserlib.so" function="transformFromA"/>
        </connector>
    </is>
<!-- Other connector to RTPS End -->

<!-- Bidirectional connector Start -->
    <is>
        <profiles>
            <participant profile_name="RTPS">
                <!-- RTPS participant attributes -->
            </participant>

            <subscriber profile_name="Subscriber">
                <!-- RTPS subscriber attributes -->
            </subscriber>

            <publisher profile_name="Publisher">
                <!-- RTPS publisher attributes -->
            </publisher>
        </profiles>

        <bridge name="Other protocol">
            <library>/path/to/bridge/library/libprotocol.so</library>
            <!-- Other protocol properties -->

            <reader name="OtherSub">
                <!-- Other protocol reader properties -->
            </reader>

            <writer name="OtherPub">
                <!-- Other protocol writer properties -->
            </writer>
        </bridge>

        <connector name="connector">
            <reader bridge_name="Other protocol" reader_name="OtherSub"/>
            <writer participant_profile="RTPS" publisher_profile="Publisher"/>
            <transformation file="/path/to/transform/libuserlib.so" function="transformFromA"/>
        </connector>

        <connector name="connector">
            <reader participant_profile="RTPS" subscriber_profile="Subscriber"/>
            <writer bridge_name="Other protocol" writer_name="OtherPub"/>
            <transformation file="/path/to/transform/libuserlib.so" function="transform"/>
        </connector>
    </is>
<!-- Bidirectional connector End -->

<!-- Bridge Start -->
    <bridge name="file">
        <library>build/libisfile.so</library>
        <properties>
            <property>
                <name>propertyA</name>
                <value>valueA</value>
            </property>
            <property>
                <name>propertyB</name>
                <value>valueB</value>
            </property>
        </properties>

        <writer name="file_writer">
            <property>
                <name>filename</name>
                <value>output.txt</value>
            </property>
            <property>
                <name>format</name>
                <value>txt</value>
            </property>
            <property>
                <name>append</name>
                <value>true</value>
            </property>
        </writer>
    </bridge>
<!-- Bridge End -->

<!-- IS Libraries Start -->
    <is>
        <is_types>
            <type name="ShapeType">
                <library>libshapelib.so</library> <!-- Library for ShapeType -->
            </type>
            <type name="Unused type"/>
            <!-- Can be used to pack types or types without their own library -->
            <types_library>libotherlib.so</types_library>
        </is_types>

        <profiles>
            <participant profile_name="2Dshapes">
                <!-- RTPS participant attributes -->
            </participant>

            <participant profile_name="3Dshapes">
                <!-- RTPS participant attributes -->
            </participant>

            <subscriber profile_name="2d_subscriber">
                <!-- RTPS subscriber attributes -->
            </subscriber>

            <subscriber profile_name="3d_subscriber">
                <!-- RTPS subscriber attributes -->
            </subscriber>

            <publisher profile_name="2d_publisher">
                <!-- RTPS publisher attributes -->
            </publisher>

            <publisher profile_name="3d_publisher">
                <!-- RTPS publisher attributes -->
            </publisher>
        </profiles>

        <bridge name="protocol">
            <library>/path/to/bridge/library/libprotocol.so</library>
            <properties>
                <property>
                    <name>property1</name>
                    <value>value1</value>
                </property>
            </properties>

            <writer name="protocol_publisher">
                <property>
                    <name>property1</name>
                    <value>value1</value>
                </property>
                <property>
                    <name>property2</name>
                    <value>value2</value>
                </property>
            </writer>

            <reader name="protocol_subscriber">
                <property>
                    <name>property1</name>
                    <value>value1</value>
                </property>
                <property>
                    <name>property2</name>
                    <value>value2</value>
                </property>
            </reader>
        </bridge>

        <connector name="shapes_projection">
            <reader participant_profile="3Dshapes" subscriber_profile="3d_subscriber"/>
            <writer participant_profile="2Dshapes" publisher_profile="2d_publisher"/>
            <transformation file="/path/to/transform/libuserlib.so" function="transform3D_to_2D"/>
        </connector>

        <connector name="shapes_stereo">
            <reader participant_profile="2Dshapes" subscriber_profile="2d_subscriber"/>
            <writer participant_profile="3Dshapes" publisher_profile="3d_publisher"/>
            <transformation file="/path/to/transform/libuserlib.so" function="transform2D_to_3D"/>
        </connector>

        <connector name="shapes_protocol">
            <reader participant_profile="2Dshapes" subscriber_profile="2d_subscriber"/>
            <writer bridge_name="protocol" writer_name="protocol_publisher"/>
            <transformation file="/path/to/transform/libprotocoltransf.so" function="transformFrom2D"/>
        </connector>

        <connector name="protocol_shapes">
            <reader bridge_name="protocol" reader_name="protocol_subscriber"/>
            <writer participant_profile="2Dshapes" publisher_profile="2d_publisher"/>
            <transformation file="/path/to/transform/libprotocoltransf.so" function="transformTo2D"/>
        </connector>
    </is>
<!-- IS Libraries End -->
</body>
